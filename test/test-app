'use strict'

const GCSFS = require('gcsfs')
const ImmutableAccessControl = require('immutable-access-control')
const ImmutableDatabaseMariaSQL = require('immutable-database-mariasql')
const immutableApp = require('immutable-app')
const immutableAppAuth = require('immutable-app-auth')
const immutableAppImage = require('../lib/immutable-app-image')

const dbHost = process.env.DB_HOST || 'localhost'
const dbName = process.env.DB_NAME || 'test'
const dbPass = process.env.DB_PASS || ''
const dbUser = process.env.DB_USER || 'root'

const bucketName = process.env.BUCKET_NAME
const keyFile = process.env.KEY_FILE

// create gcsfs instance
const gcsfs = new GCSFS({
    bucketName: bucketName,
    createBucket: true,
    defaultPublic: true,
    keyFile: keyFile,
})


// use the same params for all connections
const connectionParams = {
    charset: 'utf8',
    db: dbName,
    host: dbHost,
    password: dbPass,
    user: dbUser,
}
// create database connection to use for testing
var database = new ImmutableDatabaseMariaSQL(connectionParams)

run().catch(err => console.error(err.stack))

async function run () {
    var app = immutableApp('test-app')
    // configure auth module
    immutableAppAuth.config()
    // configure image module
    immutableAppImage.config({
        // use google cloud storage fs
        fs: gcsfs,
    })
    // set configuration for testing
    app.config({
        // set default database
        database: {
            default: database,
        },
    })
    // start server
    await app.start()
}